{"version":3,"sources":["../src/module.ts"],"names":["_","optionsEditorCtrl","tooltipEditorCtrl","migratePanelConfig","kbn","loadPluginCss","MetricsPanelCtrl","CoreEvents","PanelEvents","Bucket","BucketMatrix","rendering","Polygrafill","ColorModeDiscrete","VALUE_INDEX","TIME_INDEX","colorSchemes","name","value","invert","colorModes","opacityScales","dark","light","renderComplete","StatusHeatmapCtrl","$scope","$injector","timeSrv","annotationsSrv","$window","datasourceSrv","variableSrv","templateSrv","datasource","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","yAxis","minWidth","maxWidth","tooltip","freezeOnClick","showItems","items","legend","nullPointMode","yAxisSort","highlightCards","useMax","seriesFilterIndex","hasAppEventCompatibleEmitter","events","fallbackToStringEvents","panel","defaultsDeep","panelDefaults","graph","multipleValues","noColorDefined","discreteExtraSeries","dataWarnings","title","tip","noDatapoints","annotations","on","render","onRender","bind","dataReceived","onDataReceived","dataError","onDataError","dataSnapshotLoad","editModeInitialized","onInitEditMode","refresh","postRefresh","onRenderComplete","onCardColorChange","data","chartWidth","renderingCompleted","wndWidth","$","window","width","panelWidthFactor","gridPos","w","panelWidth","Math","ceil","max","ret","calculateInterval","getChartWidth","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","roundIntervalCeil","lowLimitMs","intervalOverride","interval","replace","scopedVars","slice","interval_to_ms","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","issueQueriesWithInterval","origInterval","res","dataList","bucketMatrix","convertDataToBuckets","result","loading","length","addEditorTab","unitFormats","getUnitFormats","updateCardsValuesHasColorInfo","updateCardsValuesHasColorInfoSingle","newColor","scope","elem","attrs","ctrl","time","timeRangeForUrl","mostRecentBucket","targets","buckets","xBucketSize","targetIndex","map","queryResult","i","yLabel","target","hasOwnProperty","push","targetKeys","keys","targetTimestampRanges","targetTimestamps","si","s","datapoints","datapoint","idx","uniq","tsTo","tsFrom","minFrom","targetEmptyBuckets","lastTs","topBucket","relTo","relFrom","values","mostRecent","bucketFrom","b","bucket","xid","minValue","Number","MAX_VALUE","maxValue","MIN_SAFE_INTEGER","dataIndex","dp","belong","put","min","bucketsLen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACOA,MAAAA,C;;AAKEC,MAAAA,iB,mBAAAA,iB;;AACAC,MAAAA,iB,mBAAAA,iB;;AACAC,MAAAA,kB,2BAAAA,kB;;AAGFC,MAAAA,G;;AACCC,MAAAA,a,kBAAAA,a;AAGCC,MAAAA,gB,kBAAAA,gB;;AAEAC,MAAAA,U,2BAAAA,U;AAAYC,MAAAA,W,2BAAAA,W;;AACZC,MAAAA,M,mBAAAA,M;AAAQC,MAAAA,Y,mBAAAA,Y;;AACVC,MAAAA,S;;AACEC,MAAAA,W,yBAAAA,W;;AAGDC,MAAAA,iB,wBAAAA,iB;;;AAEFC,MAAAA,W,GAAc,C;AACdC,MAAAA,U,GAAa,C;AAEbC,MAAAA,Y,GAAe,CACnB;AACA;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAE,qBAA3B;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OAFmB,EAGnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAHmB,EAInB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAJmB,EAMnB;AACA;AAAEF,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE,kBAAxB;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAPmB,EAQnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OARmB,EASnB;AAAEF,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE,kBAAxB;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OATmB,EAUnB;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,oBAA1B;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAVmB,EAWnB;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,oBAA1B;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAXmB,EAYnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAZmB,EAcnB;AACA;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAfmB,EAgBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAhBmB,EAiBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAjBmB,EAkBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAlBmB,EAmBnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAnBmB,EAoBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OApBmB,EAqBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OArBmB,EAsBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAtBmB,EAuBnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAvBmB,EAwBnB;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,iBAAvB;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAxBmB,EAyBnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAzBmB,EA0BnB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE,mBAAzB;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OA1BmB,C;AA6BjBC,MAAAA,U,GAAa,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,C;AACbC,MAAAA,a,GAAgB,CAAC,QAAD,EAAW,MAAX,C;AAEpBhB,MAAAA,aAAa,CAAC;AACZiB,QAAAA,IAAI,EAAE,sDADM;AAEZC,QAAAA,KAAK,EAAE;AAFK,OAAD,CAAb;;gCAKWC,c,GAAqB;AAACP,QAAAA,IAAI,EAAC;AAAN,O,GAAoC;;;wDAE9DQ,iB;;;;;;;AAsEJ;AACA,mCAAYC,MAAZ,EAAyBC,SAAzB,EAA2DC,OAA3D,EAA4EC,cAA5E,EAA4GC,OAA5G,EAAqHC,aAArH,EAA2IC,WAA3I,EAA6JC,WAA7J,EAA0K;AAAA;;AAAA;;AACxK,iGAAMP,MAAN,EAAcC,SAAd;AADwK,gBAA9FE,cAA8F,GAA9FA,cAA8F;AAAA,gBAA/BG,WAA+B,GAA/BA,WAA+B;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,0EA/DrJ,EA+DqJ;;AAAA,uEA9DxJ,EA8DwJ;;AAAA,yEA7DtJ,EA6DsJ;;AAAA;;AAAA,yEA1DtG,EA0DsG;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,wEAnDlJ,EAmDkJ;;AAAA;;AAAA,0EAhDrJ;AACnB;AACAE,YAAAA,UAAU,EAAE,IAFO;AAGnB;AACAC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,SAAS,EAAE,SAFN;AAGLC,cAAAA,UAAU,EAAE,MAHP;AAILC,cAAAA,QAAQ,EAAE,GAJL;AAKLC,cAAAA,WAAW,EAAE,mBALR;AAML;AACAC,cAAAA,YAAY,EAAE,SAPT;AAQLC,cAAAA,UAAU,EAAE,EARP,CAQU;;AARV,aAJY;AAcnB;AACAC,YAAAA,KAAK,EAAE;AACLC,cAAAA,YAAY,EAAE,CADT;AAELC,cAAAA,YAAY,EAAE,CAFT;AAGLC,cAAAA,YAAY,EAAE,CAHT;AAILC,cAAAA,SAAS,EAAE;AAJN,aAfY;AAqBnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE;AADD,aArBY;AAwBnBC,YAAAA,KAAK,EAAE;AACLD,cAAAA,IAAI,EAAE,IADD;AAELE,cAAAA,QAAQ,EAAE,CAAC,CAFN;AAGLC,cAAAA,QAAQ,EAAE,CAAC;AAHN,aAxBY;AA6BnBC,YAAAA,OAAO,EAAE;AACPJ,cAAAA,IAAI,EAAE,IADC;AAEPK,cAAAA,aAAa,EAAE,IAFR;AAGPC,cAAAA,SAAS,EAAE,KAHJ;AAIPC,cAAAA,KAAK,EAAE,EAJA,CAIG;;AAJH,aA7BU;AAmCnBC,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE;AADA,aAnCW;AAsCnB;AACAS,YAAAA,aAAa,EAAE,UAvCI;AAwCnBC,YAAAA,SAAS,EAAE,SAxCQ;AAyCnBC,YAAAA,cAAc,EAAE,IAzCG;AA0CnBC,YAAAA,MAAM,EAAE,IA1CW;AA4CnBC,YAAAA,iBAAiB,EAAE,CAAC;AA5CD,WAgDqJ;;AAGxK,cAAG,CAAClD,WAAW,CAACmD,4BAAZ,CAAyC,MAAKC,MAA9C,CAAJ,EAA0D;AACxDzD,YAAAA,UAAU,CAAC0D,sBAAX;AACAzD,YAAAA,WAAW,CAACyD,sBAAZ;;AACA,sCAAAzC,cAAc,GAAGA,cAAc,CAACP,IAAhC;AACD;;AAEDd,UAAAA,kBAAkB,CAAC,MAAK+D,KAAN,CAAlB;;AACAlE,UAAAA,CAAC,CAACmE,YAAF,CAAe,MAAKD,KAApB,EAA2B,MAAKE,aAAhC;;AAEA,gBAAK/C,aAAL,GAAqBA,aAArB;AACA,gBAAKD,UAAL,GAAkBA,UAAlB;AACA,gBAAKJ,YAAL,GAAoBA,YAApB,CAdwK,CAgBxK;;AACA,gBAAKqD,KAAL,GAAa;AACX,0BAAe,CAAC;AADL,WAAb;AAIA,gBAAKC,cAAL,GAAsB,KAAtB;AACA,gBAAKC,cAAL,GAAsB,KAAtB;AAEA,gBAAKC,mBAAL,GAA2B,IAAI3D,iBAAJ,CAAsBa,MAAtB,CAA3B;AAEA,gBAAK+C,YAAL,GAAoB;AAClBF,YAAAA,cAAc,EAAE;AACdG,cAAAA,KAAK,EAAE,qCADO;AAEdC,cAAAA,GAAG,EAAE;AAFS,aADE;AAKlBL,YAAAA,cAAc,EAAE;AACdI,cAAAA,KAAK,EAAE,yCADO;AAEdC,cAAAA,GAAG,EAAE;AAFS,aALE;AASlBC,YAAAA,YAAY,EAAE;AACZF,cAAAA,KAAK,EAAE,gBADK;AAEZC,cAAAA,GAAG,EAAE;AAFO;AATI,WAApB;AAeA,gBAAKE,WAAL,GAAmB,EAAnB;AACA,gBAAKhD,cAAL,GAAsBA,cAAtB;AAEA,gBAAKD,OAAL,GAAeA,OAAf;;AAEA,gBAAKoC,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAACuE,MAA3B,EAAmC,MAAKC,QAAL,CAAcC,IAAd,+BAAnC;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAAC0E,YAA3B,EAAyC,MAAKC,cAAL,CAAoBF,IAApB,+BAAzC;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAAC4E,SAA3B,EAAsC,MAAKC,WAAL,CAAiBJ,IAAjB,+BAAtC;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAAC8E,gBAA3B,EAA6C,MAAKH,cAAL,CAAoBF,IAApB,+BAA7C;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAAC+E,mBAA3B,EAAgD,MAAKC,cAAL,CAAoBP,IAApB,+BAAhD;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetE,WAAW,CAACiF,OAA3B,EAAoC,MAAKC,WAAL,CAAiBT,IAAjB,+BAApC,EAnDwK,CAoDxK;;;AACA,gBAAKjB,MAAL,CAAYc,EAAZ,CAAetD,cAAf,EAA+B,MAAKmE,gBAAL,CAAsBV,IAAtB,+BAA/B;;AAEA,gBAAKW,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBX,IAAvB,+BAAzB;AAvDwK;AAwDzK;;;;2CAEgBY,I,EAAgB;AAC/B,iBAAKxB,KAAL,CAAWyB,UAAX,GAAwBD,IAAI,CAACC,UAA7B;AACA,iBAAKC,kBAAL;AACD,W,CAED;AACA;;;;0CACuB;AACrB,gBAAI,KAAK1B,KAAL,CAAWyB,UAAX,GAAwB,CAA5B,EAA+B;AAC7B,qBAAO,KAAKzB,KAAL,CAAWyB,UAAlB;AACD;;AAED,gBAAME,QAAQ,GAAGC,CAAC,CAACC,MAAD,CAAD,CAAUC,KAAV,EAAjB,CALqB,CAMrB;;AACA,gBAAMC,gBAAgB,GAAG,KAAKlC,KAAL,CAAWmC,OAAX,CAAmBC,CAAnB,GAAuB,EAAhD;AACA,gBAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUT,QAAQ,GAAGI,gBAArB,CAAnB,CARqB,CASrB;AACA;AACA;AACA;;AACA,gBAAMN,UAAU,GAAG9F,CAAC,CAAC0G,GAAF,CAAM,CACvBH,UAAU,GAAG,GADU,EAEvBA,UAAU,GAAC,CAFY,CAAN,CAAnB;;AAKA,mBAAOT,UAAP;AACD,W,CAED;AACA;AACA;;;;0CACgB5D,U,EAAkB;AAChC,gBAAIyE,GAAG,0FAAyBzE,UAAzB,CAAP;;AACA,iBAAK0E,iBAAL;AACA,mBAAOD,GAAP;AACD,W,CAED;AACA;AACA;;;;8CACoB;AAClB,gBAAIb,UAAU,GAAG,KAAKe,aAAL,EAAjB;AAEA,gBAAIC,YAAY,GAAG,KAAK5C,KAAL,CAAWvB,KAAX,CAAiBC,YAApC;AACA,gBAAImE,UAAU,GAAG,KAAK7C,KAAL,CAAWvB,KAAX,CAAiBG,YAAlC;AACA,gBAAIkE,aAAa,GAAGR,IAAI,CAACC,IAAL,CAAU,CAACX,UAAU,GAACgB,YAAZ,KAA6BA,YAAY,GAAGC,UAA5C,CAAV,CAApB;AAEA,gBAAIE,UAAJ;AACA,gBAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,EAAX,CAAcC,OAAd,KAA0B,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,OAAhB,EAAxC,CARkB,CAUlB;;AACAJ,YAAAA,UAAU,GAAG,KAAKzC,mBAAL,CAAyB+C,iBAAzB,CAA2CL,OAAO,GAAGF,aAArD,CAAb,CAXkB,CAalB;;AACA,gBAAIQ,UAAU,GAAG,CAAjB,CAdkB,CAcE;;AAEpB,gBAAIC,gBAAgB,GAAG,KAAKvD,KAAL,CAAWwD,QAAlC,CAhBkB,CAkBlB;;AACA,gBAAID,gBAAJ,EAAsB;AACpBA,cAAAA,gBAAgB,GAAG,KAAKxF,WAAL,CAAiB0F,OAAjB,CAAyBF,gBAAzB,EAA2C,KAAKvD,KAAL,CAAW0D,UAAtD,CAAnB;AACD,aAFD,MAEO,IAAI,KAAK1F,UAAL,IAAmB,KAAKA,UAAL,CAAgBwF,QAAvC,EAAiD;AACtDD,cAAAA,gBAAgB,GAAG,KAAKvF,UAAL,CAAgBwF,QAAnC;AACD;;AAED,gBAAID,gBAAJ,EAAsB;AACpB,kBAAIA,gBAAgB,CAAC,CAAD,CAAhB,KAAwB,GAA5B,EAAiC;AAC/BA,gBAAAA,gBAAgB,GAAGA,gBAAgB,CAACI,KAAjB,CAAuB,CAAvB,CAAnB;AACD;;AACDL,cAAAA,UAAU,GAAGpH,GAAG,CAAC0H,cAAJ,CAAmBL,gBAAnB,CAAb;AACD;;AAED,gBAAID,UAAU,GAAGP,UAAjB,EAA6B;AAC3BA,cAAAA,UAAU,GAAGO,UAAb;AACD;;AACD,gBAAIE,QAAQ,GAAGtH,GAAG,CAAC2H,YAAJ,CAAiBd,UAAU,GAAG,IAA9B,CAAf;AAEA,iBAAKA,UAAL,GAAkBA,UAAlB;AACA,iBAAKS,QAAL,GAAgBA,QAAhB,CAtCkB,CAwClB;AACA;AACA;AACD;;;uCAEYxF,U,EAAiB;AAAA;;AAC5B,iBAAK8F,kBAAL,GAA0B,KAAKnG,cAAL,CAAoBoG,cAApB,CAAmC;AAC3DC,cAAAA,SAAS,EAAE,KAAKA,SAD2C;AAE3DhE,cAAAA,KAAK,EAAE,KAAKA,KAF+C;AAG3DiD,cAAAA,KAAK,EAAE,KAAKA;AAH+C,aAAnC,CAA1B;AAMA;;;;;;AAMA;;AACA,gBAAI,gBAAgB,OAAO,KAAKtF,cAAL,CAAoBsG,kBAA/C,EAAoE;AAClE,qBAAO,KAAKtG,cAAL,CAAoBsG,kBAApB,CAAuCC,IAAvC,CAA4C,UAAAC,CAAC,EAAI;AACtD,uBAAO,MAAI,CAACC,wBAAL,CAA8BpG,UAA9B,EAA0C,MAAI,CAACwF,QAA/C,CAAP;AACD,eAFM,CAAP;AAGD,aAJD,MAIO;AACL,qBAAO,KAAKY,wBAAL,CAA8BpG,UAA9B,EAA0C,KAAKwF,QAA/C,CAAP;AACD;AACF,W,CAED;AACA;AACA;;;;mDACyBxF,U,EAAiBwF,Q,EAAe;AACvD,gBAAIa,YAAY,GAAG,KAAKrE,KAAL,CAAWwD,QAA9B;AACA,iBAAKxD,KAAL,CAAWwD,QAAX,GAAsBA,QAAtB;;AACA,gBAAIc,GAAG,uFAAsBtG,UAAtB,CAAP;;AACA,iBAAKgC,KAAL,CAAWwD,QAAX,GAAsBa,YAAtB;AACA,mBAAOC,GAAP;AACD;;;yCAEcC,Q,EAAe;AAAA;;AAC5B,iBAAK5C,IAAL,GAAe4C,QAAf,CAD4B,CAE5B;AACA;;AACA,gBAAI,CAAC,KAAKxB,UAAV,EAAsB;AACpB,mBAAKL,iBAAL;AACD;;AACD,iBAAK8B,YAAL,GAAoB,KAAKC,oBAAL,CAA0BF,QAA1B,EAAoC,KAAKtB,KAAL,CAAWG,IAAX,CAAgBD,OAAhB,EAApC,EAA+D,KAAKF,KAAL,CAAWC,EAAX,CAAcC,OAAd,EAA/D,EAAwF,KAAKJ,UAA7F,EAAyG,IAAzG,CAApB;AACA,iBAAKrC,YAAL,GAAoB,KAAK8D,YAAL,CAAkB9D,YAAtC;;AAEA,gBAAI,KAAKoD,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBI,IAAxB,CACE,UAACQ,MAAD,EAAmD;AACjD,gBAAA,MAAI,CAACC,OAAL,GAAe,KAAf,CADiD,CAEjD;;AACA,oBAAID,MAAM,CAAC/D,WAAP,IAAsB+D,MAAM,CAAC/D,WAAP,CAAmBiE,MAAnB,GAA4B,CAAtD,EAAyD;AACvD,kBAAA,MAAI,CAACjE,WAAL,GAAmB+D,MAAM,CAAC/D,WAA1B;AACD,iBAFD,MAEO;AACL,kBAAA,MAAI,CAACA,WAAL,GAAmB,EAAnB;AACD;;AACD,gBAAA,MAAI,CAACE,MAAL;AACD,eAVH,EAWE,YAAM;AACJ,gBAAA,MAAI,CAAC8D,OAAL,GAAe,KAAf;AACA,gBAAA,MAAI,CAAChE,WAAL,GAAmB,EAAnB;;AACA,gBAAA,MAAI,CAACE,MAAL;AACD,eAfH;AAiBD,aAlBD,MAkBO;AACL,mBAAK8D,OAAL,GAAe,KAAf;AACA,mBAAKhE,WAAL,GAAmB,EAAnB;AACA,mBAAKE,MAAL;AACD;AACF;;;2CAEgB;AACf,iBAAKgE,YAAL,CAAkB,SAAlB,EAA6B9I,iBAA7B,EAAgD,CAAhD;AACA,iBAAK8I,YAAL,CAAkB,SAAlB,EAA6B7I,iBAA7B,EAAgD,CAAhD;AACA,iBAAK8I,WAAL,GAAmB5I,GAAG,CAAC6I,cAAJ,EAAnB;AACD,W,CAED;AACA;;;;qCACW;AACT,gBAAI,CAAC,KAAK9B,KAAN,IAAe,CAAC,KAAKtB,IAAzB,EAA+B;AAC7B,mBAAKjB,YAAL,GAAoB,IAApB;AACA;AACD;;AAED,iBAAKN,cAAL,GAAsB,KAAtB;;AACA,gBAAI,CAAC,KAAKJ,KAAL,CAAWL,MAAhB,EAAwB;AACtB,kBAAI,KAAK6E,YAAT,EAAuB;AACrB,qBAAKpE,cAAL,GAAsB,KAAKoE,YAAL,CAAkBpE,cAAxC;AACD;AACF;;AAED,iBAAKC,cAAL,GAAsB,KAAtB;;AACA,gBAAI,KAAKL,KAAL,CAAW/B,KAAX,CAAiBC,IAAjB,KAA0B,UAA9B,EAA0C;AACxC,kBAAI,KAAK8B,KAAL,CAAWJ,iBAAX,IAAgC,CAAC,CAArC,EAAwC;AACtC,qBAAKU,mBAAL,CAAyB0E,6BAAzB;AACD,eAFD,MAEO;AACL,qBAAK1E,mBAAL,CAAyB2E,mCAAzB;AACD;;AACD,kBAAI,KAAKT,YAAT,EAAuB;AACrB,qBAAKnE,cAAL,GAAsB,KAAKmE,YAAL,CAAkBnE,cAAxC;AACD;AACF;;AAED,iBAAKK,YAAL,GAAoB,KAApB;;AACA,gBAAI,KAAK8D,YAAT,EAAuB;AACrB,mBAAK9D,YAAL,GAAoB,KAAK8D,YAAL,CAAkB9D,YAAtC;AACD;AACF;;;4CAEiBwE,Q,EAAU;AAC1B,iBAAKlF,KAAL,CAAW/B,KAAX,CAAiBE,SAAjB,GAA6B+G,QAA7B;AACA,iBAAKrE,MAAL;AACD;;;wCAEa;AACZ,iBAAKc,IAAL,GAAY,EAAZ;AACA,iBAAKhB,WAAL,GAAmB,EAAnB;AACA,iBAAKE,MAAL;AACD;;;wCAEa;AACZ,iBAAKR,cAAL,GAAsB,KAAtB;AACD;;;+BAEI8E,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B7I,YAAAA,SAAS,CAAC0I,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,IAArB,CAAT;AACD,W,CAED;;;;4CACkB;AAChB,gBAAIC,IAAI,GAAG,KAAK7H,OAAL,CAAa8H,eAAb,EAAX;AACA,mBAAO,UAAUD,IAAI,CAACnC,IAAf,GAAsB,MAAtB,GAA+BmC,IAAI,CAACrC,EAA3C;AACD,W,CAED;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAiCqBvB,I,EAAUyB,I,EAAaF,E,EAAWH,U,EAAoB0C,gB,EAAwC;AAAA;;AACjH,gBAAIjB,YAAY,GAAG,IAAIhI,YAAJ,EAAnB;AACAgI,YAAAA,YAAY,CAACxB,OAAb,GAAuBE,EAAE,GAAGE,IAA5B;AACAoB,YAAAA,YAAY,CAACzB,UAAb,GAA0BA,UAA1B;;AAEA,gBAAI,CAACpB,IAAD,IAASA,IAAI,CAACiD,MAAL,IAAe,CAA5B,EAA+B;AAC7B;AACAJ,cAAAA,YAAY,CAACkB,OAAb,GAAuB,CACrB,KADqB,EACd,KADc,EACP,MADO,CAAvB;AAGAlB,cAAAA,YAAY,CAACmB,OAAb,CAAqB,KAArB,IAA8B,EAA9B;AACAnB,cAAAA,YAAY,CAACmB,OAAb,CAAqB,KAArB,IAA8B,EAA9B;AACAnB,cAAAA,YAAY,CAACmB,OAAb,CAAqB,MAArB,IAA+B,EAA/B;AACAnB,cAAAA,YAAY,CAACoB,WAAb,GAA2B,EAA3B;AACApB,cAAAA,YAAY,CAAC9D,YAAb,GAA4B,IAA5B;AACA,qBAAO8D,YAAP;AACD;;AAED,gBAAIqB,WAAyC,GAAG,EAAhD,CAlBiH,CAoBjH;AAEA;AACA;AACA;AACA;;AAEAlE,YAAAA,IAAI,CAACmE,GAAL,CAAS,UAACC,WAAD,EAAmBC,CAAnB,EAAiC;AACxC,kBAAIC,MAAM,GAAGF,WAAW,CAACG,MAAzB;;AACA,kBAAI,CAACL,WAAW,CAACM,cAAZ,CAA2BF,MAA3B,CAAL,EAAyC;AACvCJ,gBAAAA,WAAW,CAACI,MAAD,CAAX,GAAsB,EAAtB;AACD;;AACDJ,cAAAA,WAAW,CAACI,MAAD,CAAX,CAAoBG,IAApB,CAAyBJ,CAAzB;AACD,aAND;;AAQA,gBAAIK,UAAU,GAAGvK,CAAC,CAACwK,IAAF,CAAOT,WAAP,CAAjB,CAnCiH,CAqCjH;;;AAEA,gBAAIU,qBAA0E,GAAG,EAAjF,CAvCiH,CAyCjH;AACA;;AACAF,YAAAA,UAAU,CAACP,GAAX,CAAe,UAACI,MAAD,EAAY;AACzB,kBAAIM,gBAAuB,GAAG,EAA9B;;AAEA,mBAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,WAAW,CAACK,MAAD,CAAX,CAAoBtB,MAA1C,EAAkD6B,EAAE,EAApD,EAAwD;AACtD,oBAAIC,CAAC,GAAG/E,IAAI,CAACkE,WAAW,CAACK,MAAD,CAAX,CAAoBO,EAApB,CAAD,CAAZ;;AACA3K,gBAAAA,CAAC,CAACgK,GAAF,CAAMY,CAAC,CAACC,UAAR,EAAoB,UAACC,SAAD,EAAYC,GAAZ,EAAoB;AACtCL,kBAAAA,gBAAgB,CAACJ,IAAjB,CAAsBQ,SAAS,CAAC/J,UAAD,CAAT,GAAsBuG,IAA5C;AACD,iBAFD;AAGD,eARwB,CAUzB;;;AAEAoD,cAAAA,gBAAgB,GAAG1K,CAAC,CAACgL,IAAF,CAAON,gBAAP,CAAnB,CAZyB,CAczB;;AAEAD,cAAAA,qBAAqB,CAACL,MAAD,CAArB,GAAgC,EAAhC;;AACA,mBAAK,IAAIF,CAAC,GAAGQ,gBAAgB,CAAC5B,MAAjB,GAAwB,CAArC,EAAyCoB,CAAC,IAAE,CAA5C,EAA+CA,CAAC,EAAhD,EAAqD;AACnD,oBAAIe,IAAI,GAAGP,gBAAgB,CAACR,CAAD,CAA3B;AACA,oBAAIgB,MAAM,GAAG,CAAb;;AACA,oBAAID,IAAI,GAAG,CAAX,EAAc;AACZC,kBAAAA,MAAM,GAAGD,IAAI,GAAGhE,UAAhB;AACD,iBAFD,MAEO;AACL,sBAAIiD,CAAC,GAAC,CAAF,IAAO,CAAX,EAAc;AACZ;AACAgB,oBAAAA,MAAM,GAAGR,gBAAgB,CAACR,CAAC,GAAC,CAAH,CAAhB,GAAsB,CAA/B,CAFY,CAGZ;;AACA,wBAAIiB,OAAO,GAAGF,IAAI,GAAGhE,UAArB;;AACA,wBAAIiE,MAAM,GAAGC,OAAb,EAAsB;AACpBD,sBAAAA,MAAM,GAAGC,OAAT;AACD;AACF;AACF;;AACDV,gBAAAA,qBAAqB,CAACL,MAAD,CAArB,CAA8Ba,IAA9B,IAAsC,CAACC,MAAD,EAASD,IAAT,CAAtC;AACD;AACF,aAnCD,EA3CiH,CAgFjH;AAEA;AACA;AACA;;AACAV,YAAAA,UAAU,CAACP,GAAX,CAAe,UAACI,MAAD,EAAY;AACzB,kBAAIgB,kBAAyB,GAAG,EAAhC;AAEA,kBAAIC,MAAM,GAAGjE,EAAE,GAACE,IAAhB;;AAEA,kBAAIqC,gBAAJ,EAAsB;AACpB,oBAAI2B,SAAS,GAAG,IAAI7K,MAAJ,EAAhB;AACA6K,gBAAAA,SAAS,CAACnB,MAAV,GAAmBC,MAAnB;AACAkB,gBAAAA,SAAS,CAACC,KAAV,GAAkBF,MAAlB;AACAC,gBAAAA,SAAS,CAACE,OAAV,GAAoBH,MAApB;AACAC,gBAAAA,SAAS,CAACG,MAAV,GAAmB,EAAnB;AACAH,gBAAAA,SAAS,CAACI,UAAV,GAAuB,IAAvB;;AACA,oBAAIjB,qBAAqB,CAACL,MAAD,CAArB,CAA8BC,cAA9B,CAA6CgB,MAA7C,CAAJ,EAA0D;AACxDC,kBAAAA,SAAS,CAACE,OAAV,GAAoBf,qBAAqB,CAACL,MAAD,CAArB,CAA8BiB,MAA9B,EAAsC,CAAtC,CAApB;AACAA,kBAAAA,MAAM,GAAGC,SAAS,CAACE,OAAnB;AACD;;AACDF,gBAAAA,SAAS,CAAClE,EAAV,GAAekE,SAAS,CAACC,KAAV,GAAgBjE,IAA/B;AACAgE,gBAAAA,SAAS,CAAChE,IAAV,GAAiBgE,SAAS,CAACE,OAAV,GAAkBlE,IAAnC;AACA8D,gBAAAA,kBAAkB,CAACd,IAAnB,CAAwBgB,SAAxB;AACD;;AAED,kBAAIP,GAAG,GAAG,CAAV;AACA,kBAAIY,UAAkB,GAAG,CAAzB;;AACA,qBAAOA,UAAU,IAAI,CAArB,EAAwB;AACtB,oBAAIC,CAAC,GAAG,IAAInL,MAAJ,EAAR;AACAmL,gBAAAA,CAAC,CAACzB,MAAF,GAAWC,MAAX;AACAwB,gBAAAA,CAAC,CAACL,KAAF,GAAUF,MAAM,GAAGN,GAAG,GAAC9D,UAAvB;AACA2E,gBAAAA,CAAC,CAACJ,OAAF,GAAYH,MAAM,GAAI,CAACN,GAAG,GAAC,CAAL,IAAU9D,UAAhC;AACA2E,gBAAAA,CAAC,CAACxE,EAAF,GAAOwE,CAAC,CAACL,KAAF,GAAQjE,IAAf;AACAsE,gBAAAA,CAAC,CAACtE,IAAF,GAASsE,CAAC,CAACJ,OAAF,GAAUlE,IAAnB;AACAsE,gBAAAA,CAAC,CAACH,MAAF,GAAW,EAAX;AACAE,gBAAAA,UAAU,GAAGC,CAAC,CAACJ,OAAf;AACAJ,gBAAAA,kBAAkB,CAACd,IAAnB,CAAwBsB,CAAxB;AACAb,gBAAAA,GAAG;AACJ;;AAEDK,cAAAA,kBAAkB,CAACpB,GAAnB,CAAuB,UAAC6B,MAAD,EAAS3B,CAAT,EAAe;AACpC2B,gBAAAA,MAAM,CAACC,GAAP,GAAa5B,CAAb;AACD,eAFD;AAIAxB,cAAAA,YAAY,CAACmB,OAAb,CAAqBO,MAArB,IAA+BgB,kBAA/B;AACD,aAzCD,EArFiH,CAgIjH;AAEA;;AACA1C,YAAAA,YAAY,CAACqD,QAAb,GAAwBC,MAAM,CAACC,SAA/B;AACAvD,YAAAA,YAAY,CAACwD,QAAb,GAAwBF,MAAM,CAACG,gBAA/B;AACA5B,YAAAA,UAAU,CAACP,GAAX,CAAe,UAACI,MAAD,EAAY;AACzBL,cAAAA,WAAW,CAACK,MAAD,CAAX,CAAoBJ,GAApB,CAAwB,UAACoC,SAAD,EAAe;AACrC,oBAAIxB,CAAC,GAAG/E,IAAI,CAACuG,SAAD,CAAZ;AACAxB,gBAAAA,CAAC,CAACC,UAAF,CAAab,GAAb,CAAiB,UAACqC,EAAD,EAAa;AAC5B,uBAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxB,YAAY,CAACmB,OAAb,CAAqBO,MAArB,EAA6BtB,MAAjD,EAAyDoB,CAAC,EAA1D,EAA8D;AAC5D,wBAAIxB,YAAY,CAACmB,OAAb,CAAqBO,MAArB,EAA6BF,CAA7B,EAAgCoC,MAAhC,CAAuCD,EAAE,CAACtL,UAAD,CAAzC,CAAJ,EAA4D;AAC1D2H,sBAAAA,YAAY,CAACmB,OAAb,CAAqBO,MAArB,EAA6BF,CAA7B,EAAgCqC,GAAhC,CAAoCF,EAAE,CAACvL,WAAD,CAAtC;AACD;AACF;AACF,iBAND;AAOD,eATD;AAUA4H,cAAAA,YAAY,CAACmB,OAAb,CAAqBO,MAArB,EAA6BJ,GAA7B,CAAiC,UAAC6B,MAAD,EAAY;AAC3CA,gBAAAA,MAAM,CAACE,QAAP,GAAkB/L,CAAC,CAACwM,GAAF,CAAMX,MAAM,CAACJ,MAAb,CAAlB;AACAI,gBAAAA,MAAM,CAACK,QAAP,GAAkBlM,CAAC,CAAC0G,GAAF,CAAMmF,MAAM,CAACJ,MAAb,CAAlB;;AACA,oBAAII,MAAM,CAACE,QAAP,GAAkBrD,YAAY,CAACqD,QAAnC,EAA6C;AAC3CrD,kBAAAA,YAAY,CAACqD,QAAb,GAAwBF,MAAM,CAACE,QAA/B;AACD;;AACD,oBAAIF,MAAM,CAACK,QAAP,GAAkBxD,YAAY,CAACwD,QAAnC,EAA6C;AAC3CxD,kBAAAA,YAAY,CAACwD,QAAb,GAAwBL,MAAM,CAACK,QAA/B;AACD;;AACDL,gBAAAA,MAAM,CAAC3K,KAAP,GAAe2K,MAAM,CAACK,QAAtB;;AACA,oBAAIL,MAAM,CAACJ,MAAP,CAAc3C,MAAd,GAAuB,CAA3B,EAA8B;AAC5BJ,kBAAAA,YAAY,CAACpE,cAAb,GAA8B,IAA9B;AACAuH,kBAAAA,MAAM,CAACvH,cAAP,GAAwB,IAAxB;AAEAuH,kBAAAA,MAAM,CAAC3K,KAAP,GAAe,MAAI,CAACgD,KAAL,CAAWJ,iBAAX,IAAgC,CAAC,CAAjC,GAAqC+H,MAAM,CAACJ,MAAP,CAAc,MAAI,CAACvH,KAAL,CAAWJ,iBAAzB,CAArC,GAAmF+H,MAAM,CAACK,QAAzG;AACD;AACF,eAhBD;AAiBD,aA5BD;AA8BAxD,YAAAA,YAAY,CAACoB,WAAb,GAA2BkC,MAAM,CAACG,gBAAlC;AACA5B,YAAAA,UAAU,CAACP,GAAX,CAAe,UAACI,MAAD,EAAY;AACzB,kBAAIqC,UAAkB,GAAG/D,YAAY,CAACmB,OAAb,CAAqBO,MAArB,EAA6BtB,MAAtD;;AACA,kBAAI2D,UAAU,GAAG/D,YAAY,CAACoB,WAA9B,EAA2C;AACzCpB,gBAAAA,YAAY,CAACoB,WAAb,GAA2B2C,UAA3B;AACD;AACF,aALD,EApKiH,CA2KjH;;AAEA/D,YAAAA,YAAY,CAACkB,OAAb,GAAuBW,UAAvB;AACA,mBAAO7B,YAAP;AACD;;;;QA9iB6BpI,gB;;sBAA1BmB,iB,iBACiB,a","sourcesContent":["// Libraries\nimport _ from 'lodash';\nimport { auto } from 'angular';\n\n// Components\nimport './color_legend';\nimport { optionsEditorCtrl } from './options_editor';\nimport { tooltipEditorCtrl } from './tooltip_editor';\nimport { migratePanelConfig } from './panel_config_migration';\n\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\n// Types\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationsSrv } from 'app/features/annotations/annotations_srv';\nimport { CoreEvents, PanelEvents } from './libs/grafana/events/index';\nimport { Bucket, BucketMatrix } from './statusmap_data';\nimport rendering from './rendering';\nimport { Polygrafill } from './libs/polygrafill/index';\n\n\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\n\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\nloadPluginCss({\n  dark: 'plugins/flant-statusmap-panel/css/statusmap.dark.css',\n  light: 'plugins/flant-statusmap-panel/css/statusmap.light.css'\n});\n\nexport var renderComplete:any = {name:'statusmap-render-complete'}; // eventFactory('statusmap-render-complete');\n\nclass StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  data: any;\n  bucketMatrix: BucketMatrix;\n\n  graph: any;\n  discreteHelper: ColorModeDiscrete;\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  unitFormats: any;\n\n  dataWarnings: {[warningId: string]: {title: string, tip: string}} = {};\n  multipleValues: boolean;\n  noColorDefined: boolean;\n  noDatapoints: boolean;\n\n  discreteExtraSeries: ColorModeDiscrete;\n\n  annotations: object[] = [];\n  annotationsPromise: any;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // color mode\n    color: {\n      mode: 'spectrum',\n      cardColor: '#b4ff00',\n      colorScale: 'sqrt',\n      exponent: 0.5,\n      colorScheme: 'interpolateGnYlRd',\n      // discrete mode settings\n      defaultColor: '#757575',\n      thresholds: [] // manual colors\n    },\n    // buckets settings\n    cards: {\n      cardMinWidth: 5,\n      cardVSpacing: 2,\n      cardHSpacing: 2,\n      cardRound: null\n    },\n    xAxis: {\n      show: true\n    },\n    yAxis: {\n      show: true,\n      minWidth: -1,\n      maxWidth: -1\n    },\n    tooltip: {\n      show: true,\n      freezeOnClick: true,\n      showItems: false,\n      items: [] // see tooltip_editor.ts\n    },\n    legend: {\n      show: true\n    },\n    // how null points should be handled\n    nullPointMode: 'as empty',\n    yAxisSort: 'metrics',\n    highlightCards: true,\n    useMax: true,\n\n    seriesFilterIndex: -1\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, timeSrv, private annotationsSrv: AnnotationsSrv, $window, datasourceSrv, public variableSrv: any, templateSrv) {\n    super($scope, $injector);\n\n    if(!Polygrafill.hasAppEventCompatibleEmitter(this.events)){\n      CoreEvents.fallbackToStringEvents();\n      PanelEvents.fallbackToStringEvents();\n      renderComplete = renderComplete.name;\n    }\n\n    migratePanelConfig(this.panel);\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteExtraSeries = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      noColorDefined: {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      multipleValues: {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      },\n      noDatapoints: {\n        title: 'No data points',\n        tip: 'No datapoints returned from data query',\n      }\n    };\n\n    this.annotations = [];\n    this.annotationsSrv = annotationsSrv;\n    \n    this.timeSrv = timeSrv;\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.dataError, this.onDataError.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n    this.events.on(PanelEvents.refresh, this.postRefresh.bind(this));\n    // custom event from rendering.js\n    this.events.on(renderComplete, this.onRenderComplete.bind(this));\n\n    this.onCardColorChange = this.onCardColorChange.bind(this);\n  }\n\n  onRenderComplete(data: any):void {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  }\n\n  // getChartWidth returns an approximation of chart canvas width or\n  // a saved value calculated during a render.\n  getChartWidth():number {\n    if (this.graph.chartWidth > 0) {\n      return this.graph.chartWidth;\n    }\n\n    const wndWidth = $(window).width();\n    // gripPos.w is a width in grid's measurements. Grid size in Grafana is 24.\n    const panelWidthFactor = this.panel.gridPos.w / 24;\n    const panelWidth = Math.ceil(wndWidth * panelWidthFactor);\n    // approximate width of the chart draw canvas:\n    // - y axis ticks are not rendered yet on first data receive,\n    //   so choose 200 as a decent value for y legend width\n    // - chartWidth can not be lower than the half of the panel width.\n    const chartWidth = _.max([\n      panelWidth - 200,\n      panelWidth/2\n    ]);\n\n    return chartWidth!;\n  }\n\n  // Quick workaround for 6.7 and 7.0+. There is no call to\n  // calculateInterval in updateTimeRange in those versions.\n  // TODO ts type has no argument for this method.\n  updateTimeRange(datasource?: any) {\n    let ret = super.updateTimeRange(datasource);\n    this.calculateInterval();\n    return ret;\n  }\n\n  // calculateInterval is called on 'refresh' to calculate an interval\n  // for datasource.\n  // It is override of calculateInterval from MetricsPanelCtrl.\n  calculateInterval() {\n    let chartWidth = this.getChartWidth();\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteExtraSeries.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    \n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n    let interval = kbn.secondsToHms(intervalMs / 1000);\n\n    this.intervalMs = intervalMs;\n    this.interval = interval;\n\n    // Get final buckets count after interval is adjusted\n    // TODO is it needed?\n    //this.xBucketsCount = Math.floor(rangeMs / intervalMs);\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have datasourcePromises.\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return this.issueQueriesWithInterval(datasource, this.interval);\n      });\n    } else {\n      return this.issueQueriesWithInterval(datasource, this.interval);\n    }\n  }\n\n  // Grafana 6.2 (and older) is using this.interval for queries,\n  // but Grafana 6.3+ is calculating interval again in queryRunner,\n  // so we need to save-restore this.panel.interval.\n  issueQueriesWithInterval(datasource: any, interval: any) {\n    var origInterval = this.panel.interval;\n    this.panel.interval = interval;\n    var res = super.issueQueries(datasource);\n    this.panel.interval = origInterval;\n    return res;\n  }\n\n  onDataReceived(dataList: any) {\n    this.data    = dataList;\n    // Quick workaround for 7.0+. There is no call to\n    // calculateInterval when enter Edit mode.\n    if (!this.intervalMs) {\n      this.calculateInterval();\n    }\n    this.bucketMatrix = this.convertDataToBuckets(dataList, this.range.from.valueOf(), this.range.to.valueOf(), this.intervalMs, true);\n    this.noDatapoints = this.bucketMatrix.noDatapoints;\n\n    if (this.annotationsPromise) {\n      this.annotationsPromise.then(\n        (result: { alertState: any; annotations: any }) => {\n          this.loading = false;\n          //this.alertState = result.alertState;\n          if (result.annotations && result.annotations.length > 0) {\n            this.annotations = result.annotations;\n          } else {\n            this.annotations = [];\n          }\n          this.render();\n        },\n        () => {\n          this.loading = false;\n          this.annotations = [];\n          this.render();\n        }\n      );\n    } else {\n      this.loading = false;\n      this.annotations = [];\n      this.render();\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', optionsEditorCtrl, 2);\n    this.addEditorTab('Tooltip', tooltipEditorCtrl, 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  // onRender will be called before StatusmapRenderer.onRender.\n  // Decide if warning should be displayed over cards.\n  onRender() {\n    if (!this.range || !this.data) {\n      this.noDatapoints = true;\n      return;\n    }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.bucketMatrix) {\n        this.multipleValues = this.bucketMatrix.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      if (this.panel.seriesFilterIndex == -1) {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfo();\n      } else {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfoSingle();\n      }\n      if (this.bucketMatrix) {\n        this.noColorDefined = this.bucketMatrix.noColorDefined;\n      }\n    }\n\n    this.noDatapoints = false;\n    if (this.bucketMatrix) {\n      this.noDatapoints = this.bucketMatrix.noDatapoints;\n    }\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  }\n\n  postRefresh() {\n    this.noColorDefined = false;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  // Compatible with Grafana 7.0 overrides feature.\n  retrieveTimeVar() {\n    var time = this.timeSrv.timeRangeForUrl();\n    return 'from=' + time.from + '&to=' + time.to;\n  }\n\n  // convertToBuckets groups values in data into buckets by target and timestamp.\n  //\n  // data is a result from datasource. It is an array of timeseries and tables:\n  /* [\n    // timeseries\n    {\n      target: \"query alias\",\n      refId: \"A\",\n      datapoints: [\n        [0, 1582681239911],\n        [3, 158....],\n        ...\n      ],\n      tags?:{key: value,...}\n    },\n    // table\n    {\n      name: \"table name\",\n      refId: \"B\",\n      columns: [\n        {text: \"id\"},\n        {text: \"info\"},\n        ...\n      ],\n      rows: [\n        [1, \"123\"],\n        [2, \"44411\"],\n        ...\n      ]\n    },\n...\n  ]\n\n  to and from — a time range of the panel.\n  intervalMs — a calculated interval. It is used to split a time range.\n  */\n  convertDataToBuckets(data:any, from:number, to:number, intervalMs: number, mostRecentBucket: boolean):BucketMatrix {\n    let bucketMatrix = new BucketMatrix();\n    bucketMatrix.rangeMs = to - from;\n    bucketMatrix.intervalMs = intervalMs;\n\n    if (!data || data.length == 0) { \n      // Mimic heatmap and graph 'no data' labels.\n      bucketMatrix.targets = [\n        \"1.0\", \"0.0\", \"-1.0\"\n      ];\n      bucketMatrix.buckets[\"1.0\"] = [];\n      bucketMatrix.buckets[\"0.0\"] = [];\n      bucketMatrix.buckets[\"-1.0\"] = [];\n      bucketMatrix.xBucketSize = 42;\n      bucketMatrix.noDatapoints = true;\n      return bucketMatrix;\n    }\n\n    let targetIndex: {[target: string]: number[]} = {};\n\n    // Group indicies of elements in data by target (y label).\n    \n    // lodash version:\n    //_.map(data, (d, i) => {\n    //  targetIndex[d.target] = _.concat(_.toArray(targetIndex[d.target]), i);\n    //});\n\n    data.map((queryResult: any, i: number) => {\n      let yLabel = queryResult.target;\n      if (!targetIndex.hasOwnProperty(yLabel)) {\n        targetIndex[yLabel] = [];\n      }\n      targetIndex[yLabel].push(i);\n    });\n\n    let targetKeys = _.keys(targetIndex);\n\n    //console.log (\"targetIndex: \", targetIndex, \"targetKeys: \", targetKeys);\n\n    let targetTimestampRanges: {[target: string]: {[timestamp: number]: number[]}} = {};\n\n    // Collect all timestamps for each target.\n    // Make map timestamp => [from, to]. from == previous ts, to == ts from datapoint.\n    targetKeys.map((target) => {\n      let targetTimestamps: any[] = [];\n\n      for (let si = 0; si < targetIndex[target].length; si++) {\n        let s = data[targetIndex[target][si]];\n        _.map(s.datapoints, (datapoint, idx) => {\n          targetTimestamps.push(datapoint[TIME_INDEX]-from);\n        })\n      }\n\n      //console.log(\"timestamps['\"+target+\"'] = \", targetTimestamps);\n\n      targetTimestamps = _.uniq(targetTimestamps);\n\n      //console.log(\"uniq timestamps['\"+target+\"'] = \", targetTimestamps);\n\n      targetTimestampRanges[target] = [];\n      for (let i = targetTimestamps.length-1 ; i>=0; i-- ) {\n        let tsTo = targetTimestamps[i];\n        let tsFrom = 0;\n        if (tsTo < 0) {\n          tsFrom = tsTo - intervalMs;\n        } else {\n          if (i-1 >= 0) {\n            // Set from to previous timestamp + 1ms;\n            tsFrom = targetTimestamps[i-1]+1;\n            // tfTo - tfFrom should not be more than intervalMs\n            let minFrom = tsTo - intervalMs;\n            if (tsFrom < minFrom) {\n              tsFrom = minFrom;\n            }\n          }\n        }\n        targetTimestampRanges[target][tsTo] = [tsFrom, tsTo];\n      }\n    });\n\n    // console.log (\"targetTimestampRanges: \", targetTimestampRanges);\n\n    // Create empty buckets using intervalMs to calculate ranges.\n    // If mostRecentBucket is set, create a bucket with a range \"to\":\"to\"\n    // to store most recent values.\n    targetKeys.map((target) => {\n      let targetEmptyBuckets: any[] = [];\n\n      let lastTs = to-from;\n\n      if (mostRecentBucket) {\n        let topBucket = new Bucket();\n        topBucket.yLabel = target;\n        topBucket.relTo = lastTs;\n        topBucket.relFrom = lastTs;\n        topBucket.values = [];\n        topBucket.mostRecent = true;\n        if (targetTimestampRanges[target].hasOwnProperty(lastTs)) {\n          topBucket.relFrom = targetTimestampRanges[target][lastTs][0];\n          lastTs = topBucket.relFrom;\n        }\n        topBucket.to = topBucket.relTo+from;\n        topBucket.from = topBucket.relFrom+from;\n        targetEmptyBuckets.push(topBucket);\n      }\n\n      let idx = 0;\n      let bucketFrom: number = 0;\n      while (bucketFrom >= 0) {\n        let b = new Bucket();\n        b.yLabel = target;\n        b.relTo = lastTs - idx*intervalMs;\n        b.relFrom = lastTs - ((idx+1) * intervalMs);\n        b.to = b.relTo+from;\n        b.from = b.relFrom+from;\n        b.values = [];\n        bucketFrom = b.relFrom;\n        targetEmptyBuckets.push(b);\n        idx++;\n      }\n\n      targetEmptyBuckets.map((bucket, i) => {\n        bucket.xid = i;\n      });\n\n      bucketMatrix.buckets[target] = targetEmptyBuckets;\n    });\n\n    //console.log (\"bucketMatrix: \", bucketMatrix);\n    \n    // Put values into buckets.\n    bucketMatrix.minValue = Number.MAX_VALUE;\n    bucketMatrix.maxValue = Number.MIN_SAFE_INTEGER;\n    targetKeys.map((target) => {\n      targetIndex[target].map((dataIndex) => {\n        let s = data[dataIndex];\n        s.datapoints.map((dp: any) => {\n          for (let i = 0; i < bucketMatrix.buckets[target].length; i++) {\n            if (bucketMatrix.buckets[target][i].belong(dp[TIME_INDEX])) {\n              bucketMatrix.buckets[target][i].put(dp[VALUE_INDEX]);\n            }\n          }\n        });\n      });\n      bucketMatrix.buckets[target].map((bucket) => {\n        bucket.minValue = _.min(bucket.values);\n        bucket.maxValue = _.max(bucket.values);\n        if (bucket.minValue < bucketMatrix.minValue) {\n          bucketMatrix.minValue = bucket.minValue;\n        }\n        if (bucket.maxValue > bucketMatrix.maxValue) {\n          bucketMatrix.maxValue = bucket.maxValue;\n        }\n        bucket.value = bucket.maxValue;\n        if (bucket.values.length > 1) {\n          bucketMatrix.multipleValues = true;\n          bucket.multipleValues = true;\n\n          bucket.value = this.panel.seriesFilterIndex != -1 ? bucket.values[this.panel.seriesFilterIndex] : bucket.maxValue;\n        }\n      })\n    });\n\n    bucketMatrix.xBucketSize = Number.MIN_SAFE_INTEGER;\n    targetKeys.map((target) => {\n      let bucketsLen: number = bucketMatrix.buckets[target].length;\n      if (bucketsLen > bucketMatrix.xBucketSize) {\n        bucketMatrix.xBucketSize = bucketsLen;\n      }\n    });\n\n    //console.log (\"bucketMatrix with values: \", bucketMatrix);\n\n    bucketMatrix.targets = targetKeys;\n    return bucketMatrix;\n  }\n}\n\nexport {\n  StatusHeatmapCtrl, StatusHeatmapCtrl as PanelCtrl\n};\n"],"file":"module.js"}